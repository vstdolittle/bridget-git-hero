name: DeployMicroserviceTest

on:
  push:
    branches:
    - '**'
    paths:
    - 'non-existing-path/**'

  workflow_dispatch:
    inputs:
      dockerfile:
        description: 'The Dockerfile to build'
        required: true
      docker-image-tag:
        description: 'The Docker image tag'
        required: true
      deployment:
        description: 'The deployment name'
        required: true
      version:
        description: 'The version to deploy as'
        required: true
      source-path:
        description: 'The relative path to the source'
        required: true
      container-name:
        description: 'The name of the container in the deployment to update'
        required: true
        default: 'head'
      application-name:
        description: 'The application name (K8s namespace) to deploy to'
        required: false
        default: 'application-c52e450e-4877-47bf-a584-7874c205e2b9'

env:
  CONTAINER_REGISTRY: 388c0cc724b246a78735b583ce21e01b.azurecr.io

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login via Az module
      uses: azure/login@v1.1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Push Docker image
      run: |
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ github.event.inputs.docker-image-tag }}:${{ github.event.inputs.version }}

    - name: Write version info
      id: write-version-info
      uses: dolittle/write-version-to-file-action@v1
      with:
        path: '${{ github.event.inputs.source-path }}/microservice.json'
        version: ${{ github.event.inputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Install latest Kubectl'
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: 'Set k8s context'
      uses: azure/aks-set-context@v1
      with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          resource-group: "Infrastructure-Essential"
          cluster-name: "Cluster-Production-Three"

    - name: 'Deploy to Dolittle'
      run: |
        kubectl patch --namespace ${{ github.event.inputs.application-name }} deployment ${{ github.event.inputs.deployment }} -p '{"spec": { "template": { "spec": { "containers": [{ "name":"${{ github.event.inputs.container-name }}", "image": "${{ env.CONTAINER_REGISTRY }}/${{ github.event.inputs.docker-image-tag }}:'"${{ github.event.inputs.version }}"'"}] }}}}'
